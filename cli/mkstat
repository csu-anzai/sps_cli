#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""

Cria relatório estatístico a partir das informações dos arquivos de dados.

Usage:
    mkstat atd

Options:
    -v, --version

"""

import os

from collections import Counter

from docopt import docopt

from python_modules.cli_tools import load_json, save_json, input_op
from python_modules.cli_base import arquivo_atendimentos, pasta_de_trabalho

args = docopt(__doc__)

tecnicas_contagem = ("t", "Média", "Tabulação de identificador")

def print_all(generator, *cols):
    while True:
        try: print(next(generator))
        except StopIteration: break

def exec_all(generator, *cols):
    while True:
        try: next(generator)
        except StopIteration: break


def atribuir_tecnica_contagem(campo):
    print("Qual técnica de contagem você pretende atribuir à coluna {campo}?".format(campo=campo))
    op = input_op(tecnicas_contagem)
    return op


def identificar_tecnica_de_contagem(arquivo_de_dados):
    dados = load_json(arquivo_de_dados)
    cols = tuple(sorted(dados[0]))
    dicionario_tecnicas = {}
    dicionario_tecnicas[str(cols)] = {}
    for col in cols:
        dicionario_tecnicas[str(cols)][col] = atribuir_tecnica_contagem(col)
    save_json(dicionario_tecnicas, os.sep.join([pasta_de_trabalho, 'config_contagem.json']))


    
    

def main():
    if args['atd']:
        identificar_tecnica_de_contagem(arquivo_atendimentos)

if __name__ == "__main__":
    main()