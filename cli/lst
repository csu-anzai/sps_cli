#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""

Lista informações registradas nos arquivos de dados.

Usage:
    lst [ -j ] ( usr | estudantes ) [<marcador>]
    lst [ -j ] ( atd | atendimentos )
    lst [ -j ] ( tag | marcadores ) 
    lst [ -j ] ( sei | processos ) 
    lst [ -j ] ( pnd | processos )
    lst [ -j ] ( est | estudos ) 
    lst [ -j ] ( pro | profissionais ) 

Options:
    -v, --version
    -j, --json-output

"""

import json
import os

from docopt import docopt
from subprocess import getoutput
from python_modules.cli_db_loader import get_col_values, get_tags
from python_modules.py_functions_data_manager import listar_dicionario
from python_modules.cli_tools import mk_randnum_seq
from python_modules.cli_decorators import check_config_existance

args = docopt(__doc__)

@check_config_existance
def main():
    if args['usr'] or args['estudantes']:
        from python_modules.cli_db_loader import dados_usuarios, col_width_etd_mat, col_width_etd_nome, col_width_etd_eml

        if args['<marcador>']:
            if args['<marcador>'] == 'id':
                if args['--json-output']:
                    print(listar_dicionario(dados_usuarios, [col_width_etd_mat, col_width_etd_nome, col_width_etd_eml], [], 'json'))
                else:
                    print(listar_dicionario(dados_usuarios, [col_width_etd_mat, col_width_etd_nome, col_width_etd_eml], [], 'cli'))

            else:
                if args['--json-output']:
                    print(listar_dicionario(dados_usuarios, [col_width_etd_mat, col_width_etd_nome, col_width_etd_eml], [args['<marcador>']], 'json'))
                else:
                    print(listar_dicionario(dados_usuarios, [col_width_etd_mat, col_width_etd_nome, col_width_etd_eml], [args['<marcador>']]))

        else:
            if args['--json-output']:
                print(listar_dicionario(dados_usuarios, [col_width_etd_mat, col_width_etd_nome, col_width_etd_eml], tipo_output='json'))
            else:
                print(listar_dicionario(dados_usuarios, [col_width_etd_mat, col_width_etd_nome, col_width_etd_eml]))

    elif args['atd'] or args['atendimentos']:
        from python_modules.cli_db_loader import dados_atendimentos, col_width_atend_time, col_width_atend_ident
        if args['--json-output']:
            print(listar_dicionario(dados_atendimentos, [col_width_atend_time, col_width_atend_ident, ('atd_t', 0)], tipo_output='json'))
        else:
            print(listar_dicionario(dados_atendimentos, [col_width_atend_time, col_width_atend_ident, ('atd_t', 0)]))

    elif args['tag'] or args['marcadores']:
        marcadores = get_tags(dados_usuarios)
        
        for m in marcadores:
            print(m) 
            print(getoutput("lst usr '{}'".format(m)))
            print(" ")
        

    elif args['sei'] or args['processos']:
        from python_modules.cli_db_loader import dados_processos, col_width_proc_sei_n, col_width_proc_motivo, col_width_proc_assunto, col_width_etd_mat
        if args['--json-output']:
            print(listar_dicionario(dados_processos, [col_width_etd_mat, col_width_proc_sei_n, col_width_proc_motivo, col_width_proc_assunto], tipo_output='json'))
        else:
            print(listar_dicionario(dados_processos, [col_width_etd_mat, col_width_proc_sei_n, col_width_proc_motivo, col_width_proc_assunto]))

    elif args['pnd'] or args['processos-pendentes']:
        from python_modules.cli_db_loader import dados_processos_pend, col_width_proc_sei_n, col_width_proc_assunto, col_width_etd_mat
        if args['--json-output']:
            print(listar_dicionario(dados_processos_pend, [col_width_etd_mat, col_width_proc_sei_n, col_width_proc_assunto], tipo_output='json'))
        else:
            print(listar_dicionario(dados_processos_pend, [col_width_etd_mat, col_width_proc_sei_n, col_width_proc_assunto]))

    elif args['est'] or args['estudos']:
        pass

    elif args['pro'] or args['profissionais']:
        from python_modules.cli_db_loader import dados_profissionais, col_width_prof_uid, col_width_prof_nome, col_width_prof_eml, col_width_etd_mat
        if args['--json-output']:
            print(listar_dicionario(dados_profissionais, [col_width_prof_uid, col_width_prof_nome, col_width_prof_eml], tipo_output='json'))
        else:
            print(listar_dicionario(dados_profissionais, [col_width_prof_uid, col_width_prof_nome, col_width_prof_eml]))



if __name__ == '__main__':
	main()