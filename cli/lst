#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""

Lista informações registradas nos arquivos de dados.

Usage:
    lst [ -j ] ( usr | estudantes ) [<marcador>]
    lst [ -j ] ( atd | atendimentos )
    lst [ -j ] ( tag | marcadores ) 
    lst [ -j ] ( sei | processos ) 
    lst [ -j ] ( pnd | processos-pendentes )
    lst [ -j ] ( est | estudos ) 
    lst [ -j ] ( pro | profissionais ) 

Options:
    -v, --version
    -j, --json-output

"""

import json
import os

from docopt import docopt
from subprocess import getoutput
from python_modules.cli_base import get_col_values, get_tags, col
from python_modules.cli_tools import mk_randnum_seq, verde, amarelo, listar_dicionario
from python_modules.cli_decorators import check_config_existance

args = docopt(__doc__)


@check_config_existance
def main():
    if args['usr'] or args['estudantes']:
        from python_modules.cli_base import dados_usuarios
        if args['<marcador>']:
            if args['<marcador>'] == 'id':
                if args['--json-output']:
                    print(listar_dicionario(dados_usuarios, [col.identificador, col.nome_usuario, col.eml_usuario], [], 'json'))
                else:
                    print(listar_dicionario(dados_usuarios, [col.identificador, col.nome_usuario, col.eml_usuario], [], 'cli'))

            else:
                if args['--json-output']:
                    print(listar_dicionario(dados_usuarios, [col.identificador, col.nome_usuario, col.eml_usuario], [args['<marcador>']], 'json'))
                else:
                    print(listar_dicionario(dados_usuarios, [col.identificador, col.nome_usuario, col.eml_usuario], [args['<marcador>']]))

        else:
            if args['--json-output']:
                print(listar_dicionario(dados_usuarios, [col.identificador, col.nome_usuario, col.eml_usuario], tipo_output='json'))
            else:
                for linha in listar_dicionario(dados_usuarios, [col.identificador, col.nome_usuario, col.eml_usuario]):
                    print(linha)

    elif args['atd'] or args['atendimentos']:
        from python_modules.cli_base import dados_atendimentos
        if args['--json-output']:
            print(listar_dicionario(dados_atendimentos, [col.timestamp, col.identificador, ('atd_t', 0)], tipo_output='json'))
        else:
            for linha in listar_dicionario(dados_atendimentos, [col.timestamp, col.identificador, ('atd_t', 0)]):
                print(linha)            

    elif args['tag'] or args['marcadores']:
        from python_modules.cli_base import dados_usuarios, dados_index
        marcadores = {}
        for s in dados_index:
            if s['set_de_dados'] == 'tag':
                marcadores = s['dados']
        
        for m in marcadores.keys():
            print(verde(m))
            for idx in marcadores[m]:
                print(dados_usuarios[idx]['identificador'].ljust(col.identificador[1]), dados_usuarios[idx]['nome'].ljust(col.nome_usuario[1]), dados_usuarios[idx]['eml'])
            print(amarelo("Total: {}".format(len(marcadores[m]))))
            print(' ')
        

    elif args['sei'] or args['processos']:
        from python_modules.cli_base import dados_processos
        if args['--json-output']:
            print(listar_dicionario(dados_processos, [col.identificador, col.numero_sei, col.motivo, col.assunto], tipo_output='json'))
        else:
            print(listar_dicionario(dados_processos, [col.identificador, col.numero_sei, col.motivo, col.assunto]))

    elif args['pnd'] or args['processos-pendentes']:
        from python_modules.cli_base import dados_processos_pend
        if args['--json-output']:
            print(listar_dicionario(dados_processos_pend, [col.identificador, col.numero_sei, col.assunto], tipo_output='json'))
        else:
            print(listar_dicionario(dados_processos_pend, [col.identificador, col.numero_sei, col.assunto]))

    elif args['est'] or args['estudos']:
        from python_modules.cli_base import dados_estudos
        print(listar_dicionario(dados_estudos, [col.identificador, col.cotista, col.turno_curso, col.motivos_estudo, col.campus]))

    elif args['pro'] or args['profissionais']:
        from python_modules.cli_base import dados_profissionais
        if args['--json-output']:
            print(listar_dicionario(dados_profissionais, [col.uid, col.nome_profissional, col.eml_profissional], tipo_output='json'))
        else:
            print(listar_dicionario(dados_profissionais, [col.uid, col.nome_profissional, col.eml_profissional]))



if __name__ == '__main__':
	main()
