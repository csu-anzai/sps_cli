#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""

Cria ou recria arquivo de Ã­ndices do banco de dados.

Usage:
    indexdb
    indexdb ( insert ) <identificador> <set_de_dados>

Options:
    --version

"""

import os
import asyncio

from docopt import docopt
from subprocess import getoutput
from modulos.py_sps_cli_base import data_folder,\
    dados_usuarios, arquivo_usuarios,\
    dados_processos, arquivo_processos,\
    dados_atendimentos, arquivo_atendimentos,\
    dados_corrigidos, arquivo_corrigidos,\
    dados_estudo_estudante, arquivo_estudo_estudante,\
    arquivo_index
    
from modulos.py_console_tools import save_json

args = docopt(__doc__)

def make_index_set(set_name, target_col, dados_brutos, pointer=None):
    index_set = {}
    index_set['set_de_dados'] = set_name
    index_set['dados'] = {}
    for linha in dados_brutos:
        if pointer != None:
            if linha[target_col].find(',') != -1:
                for sub_set in linha[target_col].split(','):
                    if index_set['dados'].get(sub_set.strip()) == None:
                        index_set['dados'][sub_set.strip()] = []
                    index_set['dados'][sub_set.strip()].append(linha[pointer])
            else:
                if index_set['dados'].get(linha[target_col]) == None:
                    index_set['dados'][linha[target_col]] = []
                index_set['dados'][linha[target_col]].append(linha[pointer])
        else:
            if index_set['dados'].get(linha[target_col]) == None:
                index_set['dados'][linha[target_col]] = []
            index_set['dados'][linha[target_col]].append(dados_brutos.index(linha))
    return index_set

def make_search_set(dados_brutos):
    index_set = {}
    index_set['set_de_dados'] = 'nome'
    index_set['dados'] = {}
    for linha in dados_brutos:
        for palavra in linha['nome'].split(' '):
            if index_set['dados'].get(palavra[0]) == None:
                index_set['dados'][palavra[0]] = {}
            if index_set['dados'][palavra[0]].get(palavra) == None:
                index_set['dados'][palavra[0]][palavra] = []
            index_set['dados'][palavra[0]][palavra].append(dados_brutos.index(linha))
    return index_set

            
async def make_index_set_async(set_name, target_col, dados_brutos, pointer=None):
    return make_index_set(set_name, target_col, dados_brutos, pointer)

async def make_search_set_async(dados_brutos):
    return make_search_set(dados_brutos)


def remake_index():
    loop = asyncio.get_event_loop()
    index_db = loop.run_until_complete(asyncio.gather(
        make_index_set_async('est', 'identificador', dados_usuarios),
        make_index_set_async('est-eml', 'eml', dados_usuarios, 'identificador'),
        make_index_set_async('atd', 'identificador', dados_atendimentos),
        make_index_set_async('corr', 'identificador', dados_corrigidos),
        make_index_set_async('proc', 'identificador', dados_processos),
        make_index_set_async('proc_doc', 'numero_sei', dados_processos),
        make_search_set_async(dados_usuarios),
    ))
    save_json(index_db, arquivo_index)


def main():
    remake_index()


if __name__ == '__main__':
    main()